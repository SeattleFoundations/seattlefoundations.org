---
// layout
import BaseLayout from "@layouts/BaseLayout.astro";
---

<BaseLayout
	title="Companies - Foundations"
	description="Foundations Founder in Residence Companies"
>
	<section class="site-container space-y-12">
		<div
			class="overflow-x-clip bg-[url('/assets/pattern-light.svg')] bg-center bg-no-repeat pt-24 md:pt-32 dark:bg-none"
		>
			<div class="mx-auto flex max-w-[950px] flex-col justify-center">
				<h1 class="h1 text-center">Companies</h1>
			</div>
		</div>

		<!-- Loading state -->
		<div id="companies-loading" class="mx-auto max-w-2xl text-center">
			<div class="rounded-lg bg-gray-50 p-8 dark:bg-gray-800/50">
				<div class="mx-auto mb-4 h-12 w-12 animate-spin rounded-full border-4 border-gray-300 border-t-primary-600"></div>
				<p class="text-lg text-gray-600 dark:text-gray-300">Loading companies...</p>
			</div>
		</div>

		<!-- Error state (hidden by default) -->
		<div id="companies-error" class="mx-auto max-w-2xl text-center hidden">
			<div class="rounded-lg bg-red-50 p-8 dark:bg-red-900/20">
				<p class="text-lg text-red-800 dark:text-red-300">Failed to load companies</p>
				<p class="mt-2 text-sm text-red-600 dark:text-red-400">Please try again later.</p>
			</div>
		</div>

		<!-- Empty state (hidden by default) -->
		<div id="companies-empty" class="mx-auto max-w-2xl text-center hidden">
			<div class="rounded-lg bg-gray-50 p-8 dark:bg-gray-800/50">
				<p class="text-lg text-gray-600 dark:text-gray-300">No companies to display.</p>
			</div>
		</div>

		<!-- Companies container (hidden by default) -->
		<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
			<div id="companies-container" class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 hidden"></div>
		</div>
	</section>

	<!-- Company Details Modal -->
	<div id="company-modal" class="fixed inset-0 z-50 hidden">
		<!-- Backdrop -->
		<div id="modal-backdrop" class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
		
		<!-- Modal Content -->
		<div class="fixed inset-0 z-10 overflow-y-auto">
			<div class="flex min-h-full items-center justify-center p-4 text-center sm:p-0">
				<div id="modal-content" class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-4xl">
					<!-- Close button -->
					<button id="modal-close" class="absolute right-4 top-4 z-10 rounded-full bg-white p-2 shadow-md hover:bg-gray-100">
						<svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
					
					<!-- Dynamic content will be inserted here -->
					<div id="modal-body" class="p-6">
						<!-- Company details will be loaded here -->
					</div>
				</div>
			</div>
		</div>
	</div>
</BaseLayout>

<style>
	/* Modal animations */
	#company-modal.show {
		display: block;
	}
	
	#modal-backdrop {
		animation: fadeIn 0.3s ease-out;
	}
	
	#modal-content {
		animation: slideUp 0.3s ease-out;
	}
	
	@keyframes fadeIn {
		from { opacity: 0; }
		to { opacity: 1; }
	}
	
	@keyframes slideUp {
		from {
			opacity: 0;
			transform: translateY(20px) scale(0.95);
		}
		to {
			opacity: 1;
			transform: translateY(0) scale(1);
		}
	}
</style>

<script>
	interface CompanyMember { name: string; linkedin?: string }
	interface Company {
		id: string;
		slug: string;
		name: string;
		url?: string | null;
		description?: string | null;
		logo?: string | null;
		memberCount?: number;
		alumn?: boolean | null;
		fir?: boolean | null;
		members?: CompanyMember[];
	}

	interface CompaniesApiResponse {
		success: boolean;
		data?: { companies?: Company[] };
	}

	// Store companies data globally for modal access
	let companiesData: Company[] = [];
	let globalListenersInitialized = false;

	// Mock data for local development
	const mockData: CompaniesApiResponse = {
		success: true,
		data: {
			companies: [
				{
					id: "7a138fb6-b35f-4ea8-b47e-3467457504b1",
					name: "Aarden",
					slug: "aarden",
					url: "https://aarden.ai/",
					description: null,
					logo: "/uploads/uploadedfiles/company-ab0883ab-b2ef-4b8a-9fd3-32f4ab6696e7.png",
					alumn: true,
					fir: true,
					memberCount: 3,
					members: [
						{ name: "Ben Hudson", linkedin: "https://www.linkedin.com/in/hudsonbd/" },
						{ name: "Danan Margason", linkedin: "https://www.linkedin.com/in/dananmargason/" },
						{ name: "Jasper Croom", linkedin: "https://www.linkedin.com/in/jaspercroome/" }
					]
				},
				{
					id: "8e3efd99-8b9d-4484-aa3c-a9ceb41bf09b",
					name: "Actual AI",
					slug: "actual-ai",
					url: "https://www.actual.ai/",
					description: "Actual AI is an AI-native engineering management tool that measures velocity and summarizes progress to reduce management overhead and optimize team performance.",
					logo: "/uploads/uploadedfiles/company-ce0233e7-0818-47ef-9c64-7ced6fb2b4ec.png",
					alumn: true,
					fir: true,
					memberCount: 2,
					members: [
						{ name: "Ethan Byrd", linkedin: "https://www.linkedin.com/in/etbyrd/" },
						{ name: "John Kennedy", linkedin: "https://www.linkedin.com/in/johnakennedy/" }
					]
				},
				{
					id: "c8491266-8097-4dc3-b708-f718b43f86b5",
					name: "Adyn",
					slug: "adyn",
					url: "https://adyn.com",
					description: null,
					logo: "/uploads/uploadedfiles/company-1a584240-411f-42fc-9d2c-b862d2de5ddb.jpg",
					alumn: false,
					fir: false,
					memberCount: 1,
					members: [
						{ name: "Elizabeth Ruzzo", linkedin: "https://www.linkedin.com/in/elizabethruzzophd/" }
					]
				},
				{
					id: "537d6c17-fa84-4e41-8bc6-2c834e846f76",
					name: "AI Lever",
					slug: "ai-lever",
					url: "https://ailever.io",
					description: null,
					logo: null,
					alumn: false,
					fir: true,
					memberCount: 2,
					members: [
						{ name: "David Krieger", linkedin: "https://www.linkedin.com/in/davidbkrieger/" },
						{ name: "Seshadri Sridharan", linkedin: "https://www.linkedin.com/in/seshsridharan/" }
					]
				},
				{
					id: "976b6864-d648-4a44-b8bf-dadac8d9e3df",
					name: "Airsignal",
					slug: "airsignal",
					url: "https://www.airsignal.com/",
					description: null,
					logo: "/uploads/uploadedfiles/company-ff28d579-6667-4b65-98e1-0244945dd43a.svg",
					alumn: false,
					fir: false,
					memberCount: 2,
					members: [
						{ name: "Jason Stowe", linkedin: "https://www.linkedin.com/in/jasonastowe/" },
						{ name: "Rob Futrick", linkedin: "https://www.linkedin.com/in/robfutrick/" }
					]
				}
			]
		}
	};

	function companyLogoUrl(relativeUrl: string): string {
		return new URL(relativeUrl, 'https://ai.seattlefoundations.org').toString();
	}

	// Check if we're running locally
	function isLocalDevelopment(): boolean {
		const hostname = window.location.hostname;
		return hostname === 'localhost' || hostname === '127.0.0.1' || hostname.includes('localhost');
	}

	function getPriority(company: Company): number {
		if (company.fir && !company.alumn) return 1; // Active FIR
		if (company.fir && company.alumn) return 2;  // FIR Alumni
		return 3; // Members
	}

	function createCompanyCard(company: Company): string {
		return `
			<button 
				onclick="showCompanyModal('${company.slug}')" 
				class="group text-left w-full"
				aria-label="View details for ${company.name}"
			>
				<div class="flex flex-col items-center border-r border-b border-gray-200 p-4 transition-all duration-200 hover:shadow-lg">
					<div class="flex h-20 w-full items-center justify-center px-8">
						${company.logo ? `
							<img src="${companyLogoUrl(company.logo)}" alt="${company.name} logo" class="h-16 object-contain" />
						` : `
							<div class="flex h-16 w-16 items-center justify-center rounded-full bg-gray-100">
								<span class="text-lg font-medium text-gray-500">${company.name.charAt(0)}</span>
							</div>
						`}
					</div>
					<h3 class="group-hover:text-primary-600 mt-2 text-center text-sm text-gray-900">
						<span class="flex items-center justify-center text-base">${company.name}</span>
						<div class="mt-1 flex items-center justify-center gap-1">
							${company.alumn ? `
								<span class="bg-primary-500/40 text-primary-800 inline-flex items-center rounded-full px-2 py-1 text-xs font-medium">Alum</span>
							` : ''}
							${company.fir ? `
								<span class="bg-gray-500/40 text-gray-800 inline-flex items-center rounded-full px-2 py-1 text-xs font-medium">Founder in Residence</span>
							` : `
								<span class="bg-green-500/40 text-green-800 inline-flex items-center rounded-full px-2 py-1 text-xs font-medium">Member</span>
							`}
						</div>
					</h3>
				</div>
			</button>
		`;
	}

	function renderCompanyModal(company: Company): string {
		const hostname = company.url ? new URL(company.url).hostname : '';
		const urlWithUtm = company.url ? 
			`${company.url}${company.url.includes('?') ? '&' : '?'}utm_source=seattlefoundations&utm_medium=directory&utm_campaign=company_profile` : 
			null;
		
		return `
			<div class="mb-6 overflow-hidden">
				<div class="flex flex-col md:flex-row md:items-start">
					${company.logo ? `
						<div class="mt-1 mb-4 flex-shrink-0 md:mr-6 md:mb-0">
							<img src="${companyLogoUrl(company.logo)}" alt="${company.name} logo" class="max-h-32 max-w-32 object-contain" />
						</div>
					` : ''}
					<div class="flex-1 ${!company.logo ? 'md:pl-0' : ''}">
						<div class="pr-12"> <!-- Add padding-right to avoid overlap with close button -->
							<h2 class="text-2xl font-semibold text-gray-900">${company.name}</h2>
							<div class="mt-2 flex flex-wrap items-start gap-2">
								${company.alumn ? `<span class="bg-primary-500/40 text-primary-800 inline-flex items-center rounded-full px-3 py-1 text-sm font-medium">Alumni</span>` : ''}
								${company.fir ? `<span class="bg-gray-500/40 text-gray-800 inline-flex items-center rounded-full px-3 py-1 text-sm font-medium">Founder in Residence</span>` : `<span class="bg-green-500/40 text-green-800 inline-flex items-center rounded-full px-3 py-1 text-sm font-medium">Member</span>`}
							</div>
							${urlWithUtm ? `
								<div class="mt-3">
									<a href="${urlWithUtm}" target="_blank" rel="noopener noreferrer" class="text-primary-600 hover:underline inline-flex items-center">
										<svg class="mr-1 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
										</svg>
										${hostname}
									</a>
								</div>
							` : ''}
						</div>
						${company.description ? `<p class="mt-4 text-gray-600 pr-8">${company.description}</p>` : ''}
					</div>
				</div>
			</div>
			
			${company.members && company.members.length ? `
				<div class="border-t pt-6">
					<h3 class="mb-4 text-xl font-medium text-gray-900">Active Founders</h3>
					<div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
						${company.members.map(m => `
							<div class="space-y-2 rounded-lg bg-gray-50 px-6 py-4">
								<h4 class="text-lg font-medium text-gray-900">${m.name}</h4>
								${m.linkedin ? `<a href="${m.linkedin}" target="_blank" rel="noopener noreferrer" class="text-primary-600 hover:text-primary-700 inline-flex items-center text-sm"><svg class="mr-1 h-4 w-4" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.454C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.225 0z" /></svg>LinkedIn</a>` : ''}
							</div>
						`).join('')}
					</div>
				</div>
			` : ''}
		`;
	}

	// Global function to show company modal
	window.showCompanyModal = function(slug: string) {
		const company = companiesData.find(c => c.slug === slug);
		if (!company) return;

		const modal = document.getElementById('company-modal');
		const modalBody = document.getElementById('modal-body');
		
		if (modal && modalBody) {
			modalBody.innerHTML = renderCompanyModal(company);
			modal.classList.add('show');
			document.body.style.overflow = 'hidden'; // Prevent background scrolling
			
			// Update URL without navigation (optional)
			const newUrl = `/companies#${slug}`;
			window.history.pushState({ companySlug: slug }, '', newUrl);
		}
	};

	// Close modal function
	function closeModal() {
		const modal = document.getElementById('company-modal');
		if (modal) {
			modal.classList.remove('show');
			document.body.style.overflow = ''; // Restore scrolling
			
			// Remove hash from URL
			if (window.location.hash) {
				window.history.pushState('', document.title, window.location.pathname);
			}
		}
	}

	function bindModalEvents(): void {
		const modalClose = document.getElementById('modal-close') as HTMLButtonElement | null;
		const modalBackdrop = document.getElementById('modal-backdrop') as HTMLDivElement | null;

		if (modalClose) {
			modalClose.onclick = () => closeModal();
		}
		if (modalBackdrop) {
			modalBackdrop.onclick = () => closeModal();
		}
	}

	async function loadCompanies(): Promise<void> {
		const loadingEl = document.getElementById('companies-loading');
		const errorEl = document.getElementById('companies-error');
		const emptyEl = document.getElementById('companies-empty');
		const containerEl = document.getElementById('companies-container');

		loadingEl?.classList.remove('hidden');
		errorEl?.classList.add('hidden');
		emptyEl?.classList.add('hidden');
		containerEl?.classList.add('hidden');

		try {
			let data: CompaniesApiResponse;
			
			if (isLocalDevelopment()) {
				// Use mock data for local development
				console.log('Using mock data for local development');
				// Simulate network delay
				await new Promise(resolve => setTimeout(resolve, 500));
				data = mockData;
			} else {
				// Fetch from API in production
				const response = await fetch(`https://ai.seattlefoundations.org/api/companies?t=${Date.now()}`, {
					method: 'GET',
					headers: { 'Accept': 'application/json' }
				});
				if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
				data = await response.json();
			}

			loadingEl?.classList.add('hidden');

			companiesData = data.success && data.data && data.data.companies ? data.data.companies : [];

			if (!companiesData.length) {
				emptyEl?.classList.remove('hidden');
				return;
			}

			const sorted = companiesData.sort((a, b) => {
				const pa = getPriority(a);
				const pb = getPriority(b);
				if (pa !== pb) return pa - pb;
				return a.name.localeCompare(b.name);
			});

			const html = sorted.map(c => createCompanyCard(c)).join('');
			if (containerEl) {
				containerEl.innerHTML = html;
				containerEl.classList.remove('hidden');
			}

			// Check if there's a hash in the URL and open that company
			if (window.location.hash) {
				const slug = window.location.hash.substring(1);
				window.showCompanyModal(slug);
			}
		} catch (e) {
			console.error('Error fetching companies:', e);
			loadingEl?.classList.add('hidden');
			errorEl?.classList.remove('hidden');
		}
	}

	let companiesLoaded = false;
	function checkAndLoadCompanies() {
		const isCompaniesPage = window.location.pathname === '/companies' || window.location.pathname === '/companies/';
		const hasContainer = document.getElementById('companies-container') !== null;
		if (isCompaniesPage && hasContainer && !companiesLoaded) {
			companiesLoaded = true;
			loadCompanies();
		} else if (!isCompaniesPage) {
			companiesLoaded = false;
		}
	}

	// Set up modal and global event listeners
	function initGlobalListeners(): void {
		if (globalListenersInitialized) return;
		globalListenersInitialized = true;

		// Handle escape key
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape') {
				closeModal();
			}
		});

		// Handle browser navigation for modal state
		window.addEventListener('popstate', (e: PopStateEvent) => {
			const state = (e.state as { companySlug?: string } | null) || null;
			if (state && state.companySlug) {
				window.showCompanyModal(state.companySlug);
			} else {
				closeModal();
			}
		});
	}

	document.addEventListener('DOMContentLoaded', () => {
		bindModalEvents();
		initGlobalListeners();
	});

	checkAndLoadCompanies();

	const observer = new MutationObserver(() => { checkAndLoadCompanies(); });
	observer.observe(document.body, { childList: true, subtree: true });

	document.addEventListener('visibilitychange', () => {
		if (!document.hidden && (window.location.pathname === '/companies' || window.location.pathname === '/companies/')) {
			companiesLoaded = false;
			checkAndLoadCompanies();
		}
	});

	document.addEventListener('astro:page-load', () => {
		bindModalEvents();
		checkAndLoadCompanies();
	});

	document.addEventListener('astro:after-swap', () => {
		bindModalEvents();
		companiesLoaded = false;
		checkAndLoadCompanies();
	});
</script>